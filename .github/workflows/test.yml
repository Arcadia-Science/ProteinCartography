name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    # The 'synchronize' event means the PR was updated with new commits.
    types: [opened, reopened, labeled, synchronize]
  
  # Allow manual triggering.
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -leo pipefail {0}
    steps:
      - uses: actions/checkout@v4

      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: envs/cartography_test.yml
          environment-name: test-env
          cache-environment: true
          cache-downloads: true
          generate-run-shell: true
          init-shell: bash

      - name: Cache snakemake conda envs
        uses: actions/cache@v4
        id: cache-snakemake-conda-envs
        with:
          path: .snakemake/conda
          key: conda-${{ runner.os }}--${{ runner.arch }}--${{ hashFiles('envs/*.yml') }}
          restore-keys: snakemake-conda-${{ runner.os }}--${{ runner.arch }}--

      - name: Create the snakemake conda envs
        run: |
          if [ "${{ steps.cache-snakemake-conda-envs.outputs.cache-hit }}" = "true" ]; then
            # Clean up any incomplete environments from cache
            find .snakemake/conda -type d -name "*_" -exec rm -rf {} + 2>/dev/null || true
          else
            # No cache hit, start fresh
            rm -rf .snakemake/conda
          fi
          snakemake \
            --configfile demo/search-mode/config_actin.yml \
            --use-conda \
            --conda-frontend mamba \
            --conda-create-envs-only \
            --cores 1
        shell: micromamba-shell {0}

      - name: Run the tests
        run: make test
        shell: micromamba-shell {0}

      - name: Run the tests without mocks
        if: contains(github.event.pull_request.labels.*.name, 'run-slow-tests')
        run: make test-without-mocks
        shell: micromamba-shell {0}
